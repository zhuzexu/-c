一：
    继承分为   (1)继承虚拟接口（头文件函数指针，父类无实现方法）
               (2)继承父类接口的实现方法。
    在次基础上才有了多态和重写。  
        其中多态包含两方面：1.子类新增了方法接口    2.各个子类有着不同的父类虚接口实现方法。    
        而重写：是用子类的新方法覆盖了父类的旧方法。

二：
    封装除外，大概有四种接口要留出：1. init(仅填充)  2. deinit（仅去填充）  3. create (malloc+init)   4.delete(free+deinit)  。
    注：1.2用于对象在子类（上层定义）  3.4则在底层父类申请并定义。---灵活使用。


三：
    对于上面4种接口深入理解：
    对象分类：单实例永存，单实例临时，多实例永存，多实例临时。
    用init/deinit时需要调用者提供类变量即对象自身（应用于永存实例的比较合适），同时配备get句柄，多个对象存在时注意统一管理。
    用create/destroy时是底层自动管理内存分配释放。（应用于临时实列较好，尤其是算法等临时多实例）

    注：若是抽象接口.h存在接口自身的方法实现，对于永恒实例，对象的.c中不赞同直接定义对象变量的方式(即静态全局变量)，后get句柄。原因是.h需要开放函数接口，乱！
        而.h只有虚拟接口或纯数据结构，具体实现方法全由对象实现的，对于永恒实例则推荐各个对象.c直接定义，简单明了。

    结构体：子类数据结构包含父类数据结构时，父类结构体成员只有是单实例永久时必须用指针，其他情形的话用变量或者指针都可以，推荐用变量。 
