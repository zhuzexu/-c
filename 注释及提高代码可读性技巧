/*
* Copyrigith(C) Insta360 2021-2022
* Description : 
* Author      ：
* Create      :
* Notes       : 1.
*	              2.
*/


/*
* Func      : 
* Param in  ：  aaa  xxxxx
*               bbb  xxxxx
* Param out :
* ret       :
*/


其他注释统一风格 /* xxx */ FIXME,XXX,TODO，成员、宏定义可以放在右侧。


提高代码可读性：
1. 尽量用宏去表示掩码，常量，枚举成员等，实现基本的字符串替换和字符拼接功能。
2. 枚举成员要有首尾指示。
3. 表驱动。
4. 相同类型对象，用表驱动格式统一管理。
5. 状态机用数组表或者树都可以实现。但是数组表体现不了层级从属关系，树可以。因此需要体现层级且分类的用树比较好（比如目录，多级菜单），其他用数组表简单粗暴（多用于表驱动）。
   对应实现方法   树----->list
                 表----->数组
6. C语言:const的作用的变量只读，不能被赋值。
7. 设置接口遇到设置传入参数过多时，可以将多个参数转化为小接口赋值给对象属性。简化接口。
8. 优秀代码需多次重构。代码要做的数据与程序分离，具体表现为将逻辑算法部分操作的数据用宏，数组，哈希表等方式抽离出来！
9. FIFO可以用数组或者链表实现。链表必须要用的场景是成员数目在运行过程中动态变化，不能确定。若是确定的话用数组简单。







设计模式：
1. 简易状态机模型：
   首先根据需求画出状态循环图：稳定的为状态，条件和动作为事件。时间轴不能重和漏，逐一转换。
   状态图中已所有的箭头事件为索引，建立状态表。
   
   使用时搭配队列，可以实现先后事件不丢失，逐一执行。
            外部事件过来----------------->统一对外接口
                                                      |
                                                       ----->当前状态处理---状态机处理---结束
                                                      |
            内部事件过来--->发到外面----->统一对外接口
     (某状态执行动作时又产生的事件)









